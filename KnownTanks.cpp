#include "KnownTanks.h"

#include <iostream>
#include<cmath>



// Definition du constructeur tank qui appelle :: la methode tank() dŽclarŽ dans maine.h
KnownTanks::KnownTanks()//classe::methode
{

        tankChoice = 1;
        currentRawHeight = 0;


    // l'instance currentHeight est egale au parametre passee dans le constructeur
};

const int KnownTanks::tankValuesPerCm_30k[250] = {20, 50, 90, 130, 180, 230, 280, 340, 400, 470, 530, 600, 670, 750, 820, 900, 980, 1060, 1150, 1230,
        1320, 1410, 1500, 1590, 1690, 1780, 1880, 1980, 2080, 2180, 2280, 2380, 2490, 2600, 2700, 2810, 2920, 3030, 3140, 3260,
        3370, 3490, 3600, 3720, 3840, 3960, 4080, 4200, 4320, 4440, 4570, 4690, 4820, 4940, 5070, 5200, 5330, 5460, 5590, 5720, 5850, 5980,
        6110, 6250, 6380, 6520, 6650, 6790, 6920, 7060, 7200, 7340, 7470, 7610, 7750, 7890, 8030, 8180, 8320, 8460,
        8600, 8740, 8890, 9030, 9180, 9320, 9470, 9610, 9760, 9900, 10050, 10190, 10340, 10490, 10640, 10780, 10930, 11080, 11230, 11380,
        11530, 11680, 11830, 11980, 12130, 12280, 12430, 12580, 12730, 12880, 13030, 13180, 13330, 13480, 13630, 13780, 13940, 14090, 14240, 14390,
        14540, 14690, 14850, 15000, 15150, 15300,15545, 15610, 15760, 15910, 16060, 16210, 16360, 16520, 16670, 16820, 16970, 17120, 17270, 17420,
        17570, 17720, 17870, 18020, 18170, 18320, 18470, 18620, 18770, 18920, 19070, 19220, 19370, 19520, 19660, 19810, 19960, 20110, 20250, 20400,
        20540, 20690, 20830, 20980, 21120, 21270, 21410, 21560, 21700, 21840, 21980, 22120, 22270, 22410, 22550, 22690, 22830, 22960, 23100, 23240,
        23380, 23510, 23650, 23780, 23920, 24050, 24190, 24320, 24450, 24580, 24710, 24840, 24970, 25100, 25230, 25360, 25480, 25610, 25730, 25860,
        25980, 26100, 26220, 26340, 26460, 26580, 26700, 26810, 26930, 27040, 27160, 27270, 27380, 27490, 27600, 27700, 27810, 27920, 28020, 28120,
        28220, 28320, 28420, 28520, 28610, 28710, 28800, 28890, 28980, 29007, 29150, 29240, 29320, 29400, 29480, 29550, 29630, 29700, 29770, 29830,
        29900, 29960, 30200, 30700, 30120, 30170, 30210, 30250, 30280, 30300};

const int KnownTanks::tankValuesPerCm_20k[250] = {8, 23, 42, 64, 89, 117, 148, 180, 216, 252, 291 ,332, 373, 418, 464, 511, 560, 609, 661, 714,
        764, 823, 880, 937, 997, 1056, 1118, 1181, 1243, 1308, 1373, 1440, 1508, 1577, 1645, 1716, 1786, 1859, 1931, 2005,
        2080, 2156, 2231, 2307, 2386, 2465, 2544, 2625, 2706, 2787, 2869, 2952, 3036, 3120, 3205, 3292, 3376, 3464, 3552, 3639,
        3727, 3817, 3907, 3997, 4087, 4178, 4270, 4363, 4455, 4549, 4642, 4736, 4831, 4927, 5021, 5118, 5214, 5311, 5409, 5506, 5604,
        5702, 5801, 5900, 6000, 6100, 6200, 6300, 6400, 6501, 6603, 6704, 6806, 6906, 7011, 7112, 7216, 7418, 7423, 7525, 7629, 7733,
        7838, 7941, 8046, 8151, 8255, 8359, 8465, 8570, 8675, 8780, 8887, 8992, 9097, 9204, 9309, 9414, 9520, 9627, 9732, 9838, 9945,
        10051, 10157, 10263, 10369, 10474, 10581, 10686, 10793, 10898, 11004, 11109, 11215, 11321, 11426, 11531, 11637, 11742, 11847,
        11952, 12056, 12161, 12264, 12369, 12474, 12578, 12681, 12784, 12887, 12990, 13093, 13196, 13298, 13399, 13502, 13603, 13704,
        13805, 13906, 14007, 14106, 14206, 14304, 14404, 14502, 14601, 14698, 14797, 14894, 14991, 15087, 15182, 15277, 15373, 15467,
        15561, 15655, 15749, 15841, 15933, 16026, 16116, 16208, 16298, 16387, 16476, 16565, 16652, 16739, 16826, 16912, 16997, 17082,
        17166, 17249, 17333, 17414, 17496, 17576, 17656, 17735, 17815, 17892, 17969, 18044, 18119, 18194, 18268, 18341, 18412, 18483,
        18554, 18623, 18691, 18758, 18825, 18890, 18953, 19017, 19079, 19140, 19200, 19259, 19316, 19372, 19428, 19482, 19534, 19585,
        19636, 19683, 19730, 19775, 19819, 19861, 19901, 19940, 19976, 20011, 20044, 20073, 20101, 20125, 20148, 20166, 20179};

// Setters
void KnownTanks::setCurrentTank( int aValue )
{
    this->tankChoice = aValue;
};

void KnownTanks::setRawHeight( float aValue )
{
    this->currentRawHeight = aValue;
};

void KnownTanks::setCeiledHeight( float aRawHeight )
{
    this->ceiledHeight = aRawHeight;
};

void KnownTanks::setFloorCorrespondingValue( int aCeiledHeigt )
{
    this->floorCorrespondingValue = aCeiledHeigt - 1;
};

// Getters
float KnownTanks::getCurrentRawHeight()
{
    return this->currentRawHeight;
};

int KnownTanks::getCeiledHeight()
{
    return this->ceiledHeight;
};

int KnownTanks::getFloorCorrespondingValue()
{
    return std::cout << "Valeur d'index retenue pour recherche de produit restant :" << " " << this->floorCorrespondingValue;
};

int KnownTanks::getSelectedTank()
{
    return std::cout << "Citerne selectionee :" << " " << this->tankChoice << "\n";
};

int KnownTanks::getAllArrayValues()
{
    int tankValuesPerCm_30kLength = 250;
    int i;
    for (i =0 ; i< tankValuesPerCm_30kLength ; i++)
    {
        return std::cout << tankValuesPerCm_30k[i] << "\n";
    }
};

// Methods

int KnownTanks::getFuelVolumeRemain( int aFloorValue )
{
    return std::cout << "volume restant :"<< " " << tankValuesPerCm_30k[aFloorValue] << " " << "litres \n";
};

int KnownTanks::toCeil( float aRawValue )
{
    return ceil(aRawValue);
};

int KnownTanks::toFloor( int aCeiledValue )
{
    return floor(aCeiledValue );
};


